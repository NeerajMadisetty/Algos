class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        if(nums1.length <= nums2.length){
            return getMedian(nums1,nums2);    
        }else{
            return getMedian(nums2,nums1);
        }
        
    }
    
    double getMedian(int[] arr1,int[] arr2){
        int n1 = arr1.length,n2=arr2.length;
        int low=0,high=n1;
        int cut1=0,cut2=0;
        
        while(low <= high){
            cut1 = (low+high)/2;
            cut2 = (n1+n2)/2 - cut1;
            
            int l1 = cut1 == 0 ? Integer.MIN_VALUE : arr1[cut1-1];
            int l2 = cut2 == 0 ? Integer.MIN_VALUE : arr2[cut2-1];
            int r1 = cut1 == n1 ? Integer.MAX_VALUE : arr1[cut1];
            int r2 = cut2 == n2 ? Integer.MAX_VALUE : arr2[cut2];
            
            if(l1 > r2){
                high = cut1-1;
            }else if(l2 > r1){
                low = cut1 + 1;
            }else{
                return (n1+n2)%2==0 ? ((double)(l1 > l2 ? l1 : l2)+(r1 < r2 ? r1 : r2))/2 : (r1 < r2 ? r1 : r2);
            }
        }
        return 0;
    }
}
